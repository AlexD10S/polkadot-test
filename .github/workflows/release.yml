name: release

on:
  workflow_dispatch:
    inputs:
      release: # e.g. 'polkadot-v1.12.0'
        description: Polkadot release tag
        required: true
      rust: # e.g. '1.77.0'
        description: Rust version
        required: true

jobs:
  build:
    runs-on: ${{ matrix.platform.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        platform:
          # Linux
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          # macOS
          - os: macos-14
            target: aarch64-apple-darwin
          - os: macos-14
            target: x86_64-apple-darwin
    env:
      RUSTFLAGS: "${{ matrix.platform.cpu != '' && format('-C target-cpu={0}', matrix.platform.cpu) || '' }} ${{ matrix.platform.target == 'aarch64-unknown-linux-gnu' && '-C linker=aarch64-linux-gnu-gcc' || '' }}"
      path: "target/${{ matrix.platform.target }}/release"
      polkadot-package: "polkadot-${{ matrix.platform.target }}${{ matrix.platform.cpu != '' && format('-{0}', matrix.platform.cpu) || '' }}.tar.gz"
      polkadot-parachain-package: "polkadot-parachain-${{ matrix.platform.target }}${{ matrix.platform.cpu != '' && format('-{0}', matrix.platform.cpu) || '' }}.tar.gz"
    steps:
      # Clone and checkout release
      - name: Clone release
        run: |
          git clone --branch ${{ github.event.inputs.release }} --depth 1 https://github.com/paritytech/polkadot-sdk

      # Install packages
      - name: Install packages (Linux)
        if: contains(matrix.platform.target, 'linux')
        run: sudo apt-get install -y protobuf-compiler ${{ contains(matrix.platform.target, 'aarch64') && 'crossbuild-essential-arm64' || '' }}
      - name: Install packages (macOS)
        if: contains(matrix.platform.target, 'apple')
        run: brew install protobuf

      # Configure Rust toolchain
      - name: Set Rust version and add target
        run: |
          rustup default ${{ github.event.inputs.rust }}
          rustup component add rust-src
          rustup target add ${{ matrix.platform.target }} wasm32-unknown-unknown

      # Build and package polkadot
      - name: Build polkadot
        working-directory: polkadot-sdk
        run: cargo b -r -p polkadot -F fast-runtime --target ${{ matrix.platform.target }}
      - name: Package polkadot (Linux)
        if: contains(matrix.platform.target, 'linux')
        working-directory: polkadot-sdk
        run: |
          cd ${{ env.path }}
          sha256sum polkadot > polkadot.sha256
          sha256sum polkadot-execute-worker > polkadot-execute-worker.sha256
          sha256sum polkadot-prepare-worker > polkadot-prepare-worker.sha256
          tar -czf ${{ env.polkadot-package }} polkadot polkadot.sha256 polkadot-execute-worker polkadot-execute-worker.sha256 polkadot-prepare-worker polkadot-prepare-worker.sha256
      - name: Package polkadot (macOS)
        if: contains(matrix.platform.target, 'apple')
        working-directory: polkadot-sdk
        run: |
          cd ${{ env.path }}
          shasum -a 256 polkadot > polkadot.sha256
          shasum -a 256 polkadot-execute-worker > polkadot-execute-worker.sha256
          shasum -a 256 polkadot-prepare-worker > polkadot-prepare-worker.sha256
          tar -czf ${{ env.polkadot-package }} polkadot polkadot.sha256 polkadot-execute-worker polkadot-execute-worker.sha256 polkadot-prepare-worker polkadot-prepare-worker.sha256

      # Build and package polkadot-parachain
      - name: Build polkadot-parachain
        working-directory: polkadot-sdk
        run: cargo b -r -p polkadot-parachain-bin -F fast-runtime --target ${{ matrix.platform.target }}
      - name: Package polkadot-parachain (Linux)
        if: contains(matrix.platform.target, 'linux')
        working-directory: polkadot-sdk
        run: |
          cd ${{ env.path }}
          sha256sum polkadot-parachain > polkadot-parachain.sha256
          tar -czf ${{ env.polkadot-parachain-package }} polkadot-parachain polkadot-parachain.sha256
      - name: Package polkadot-parachain (macOS)
        if: contains(matrix.platform.target, 'apple')
        working-directory: polkadot-sdk
        run: |
          cd ${{ env.path }}
          shasum -a 256 polkadot-parachain > polkadot-parachain.sha256
          tar -czf ${{ env.polkadot-parachain-package }} polkadot-parachain polkadot-parachain.sha256

      # Add packages to workflow
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: |
            'polkadot-sdk/${{ env.path }}/${{ env.polkadot-package }}'
            'polkadot-sdk/${{ env.path }}/${{ env.polkadot-parachain-package }}'

      # Add packages to release
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: | 
            'polkadot-sdk/${{ env.path }}/${{ env.polkadot-package }}'
            'polkadot-sdk/${{ env.path }}/${{ env.polkadot-parachain-package }}'